{% extends 'newbase.html.twig' %}

{% block title %}PMD : Valtoria | Profil{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('css/Character/app_character.css') }}">
{% endblock %}

{% block body %}
    <div class="characterShowTitle">Profil</div>

    <div class="profileCharacterCard">
        <div class="xpBar" title="EXP : {{ character.getXP() }} / {{ character.getXPCeil() }} ({{ character.getXPPercentage() }}%)"><div class="xpBarFill" style='width: {{ character.getXPPercentage() }}%;'></div></div>

        <div class="profileCharacterCardUpper">
            <div class="cardUpperLeft">
                <div class="speciesIcon"><img src="{{ asset(character|speciesIcon) }}"></div>
            </div>
            <div class="cardUpperRight">
                <div class="cardUpperRightNameLevelGender">
                    <div class="cardUpperRightName">Nom : {{ character.name }}</div>
                    | <div class="cardUpperRightLevel">Niveau : {{ character.level }} (EXP : {{ character.xp }} / {{ character.getXPCeil() }})</div>
                    {% if character.gender == 'Mâle' %}
                        <img class="genderIcon" src="{{ asset('icons/male.png') }}"  width='25px' height="25px" style="margin-right: 5px">
                    {% else %}
                        <img class="genderIcon" src="{{ asset('icons/female.png') }}" width='32px' height="30px">
                    {% endif %}
                </div>
                <div class="cardUpperRightSpeciesAgeRank">
                    <div class="cardUpperRightSpecies">Espèce : {{ character.Species.name }}</div>
                    | <div class="cardUpperRightAge">Age : {{ character.age }}</div>
                    | <div class="cardUpperRightRank">Rang : Cuivre</div>
                </div>
                <div class="cardUpperRightSeparator"></div>
                <div class="cardUpperRightDescription">
                    {{ form_start(modifyDescriptionFormView, {'attr': {'class': 'modifyDescriptionForm'}}) }}
                        {{ form_widget(modifyDescriptionFormView.description, {'attr': {'disabled':true, 'data-id': 'modifyDescriptionTextArea'}}) }}
                    
                    <div id="modifyDescriptionFormToggle" onClick="modifyDescriptionToggle()" class="modifyDescriptionFormToggle"></div>
                    <div id="modifyDescriptionValidationButtons" class="modifyDescriptionValidationButtons modifyDescriptionValidationButtonsHide">
                        <div class="modifyDescriptionValidationButtonCancel" onClick="OnCLickCancel()">Annuler</div>
                        {{ form_widget(modifyDescriptionFormView.submit,{'attr': {'class':'modifyDescriptionValidationButtonSubmit'}}) }}
                    </div>
                    {{ form_end(modifyDescriptionFormView) }}
                </div>
            </div>
        </div>
        <div class="profileCharacterCardSeparator"></div>
        <div class="profileCharacterCardLower">
            <div class="profileCharacterCardLowerTitle">Statistiques :</div>

            <div class="profileCharacterCardStats">
                <div class="profileCharacterCardStats1stRow">
                    <div class="profileCharacterCardStat Stat-Vitality" title="La Vitalité représente la capacité de votre pokémon à encaisser des coups sans tomber K.O. Un pokémon tombe K.O en combat lorsque sa vitalité atteint 0.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/vitality.png') }}"> 
                            <span class="profileCharacterCardStatName">Vitalité</span>
                        </div>
                        <div id='vitalityValue' class="profileCharacterCardStatValue">{{ character.Stats.vitality }}</div>
                        <div class="spendPointButton" onClick="spendPoints('vitality')" title="Dépenser 1 Point de Stat pour gagner 3 Vitalité."></div>
                    </div>
                    <div class="profileCharacterCardStat Stat-Stamina" title="L'Endurance représente la capacité de votre Pokémon à encaisser les attaques physiques, plus la valeur est élevée, plus les dégâts physiques subits seront réduits.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/stamina.png') }}"> 
                            <span class="profileCharacterCardStatName">Endurance</span>
                        </div>
                        <div id='staminaValue' class="profileCharacterCardStatValue">{{ character.Stats.stamina }}</div>
                        <div class="spendPointButton" onClick="spendPoints('stamina')" title="Dépenser 1 Point de Stat pour gagner 1 Endurance."></div>
                    </div>
                    <div class="profileCharacterCardStat Stat-Bravery" title="Le Courage représente la capacité de votre Pokémon à encaisser les attaques spéciales, plus la valeur est élevée, plus les dégâts spéciaux subits seront réduits.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/bravery.png') }}"> 
                            <span class="profileCharacterCardStatName">Courage</span>
                        </div>
                        <div id='braveryValue' class="profileCharacterCardStatValue">{{ character.Stats.bravery }}</div>
                        <div class="spendPointButton" onClick="spendPoints('bravery')" title="Dépenser 1 Point de Stat pour gagner 1 Courage."></div>
                    </div>
                    <div class="profileCharacterCardStat Stat-Agility" title="L'Agilité permet d'augmenter les chances d'esquive du Pokémon, plus sa valeur est élevée, plus les chances sont haute.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/agility.svg') }}"> 
                            <span class="profileCharacterCardStatName">Agilité</span>
                        </div>
                        <div id='agilityValue' class="profileCharacterCardStatValue">{{ character.Stats.agility }}</div>
                        <div class="spendPointButton" onClick="spendPoints('agility')" title="Dépenser 1 Point de Stat pour gagner 1 Agilité."></div>
                    </div>
                    <div class="profileCharacterCardStat Stat-Impassiveness" title="L'Impassibilité permet à un Pokémon de résister aux effets négatifs qui lui sont infligés (Status de controle, malus de stat..). Plus la valeur est élevée, plus les chances de ne pas subir un status de controle seront élevée & moins les malus de stat seront efficaces sur lui.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/impassiveness.png') }}"> 
                            <span class="profileCharacterCardStatName">Impassiblité</span>
                        </div>
                        <div id='impassivenessValue' class="profileCharacterCardStatValue">{{ character.Stats.impassiveness }}</div>
                        <div class="spendPointButton" onClick="spendPoints('impassiveness')" title="Dépenser 1 Point de Stat pour gagner 1 Impassiblité."></div>
                    </div>
                </div>
                <div class="profileCharacterCardStats2ndRow">
                    <div class="profileCharacterCardStat Stat-Strength" title="La Force représente la capacité de votre pokémon à effectuer des attaques physiques puissante, plus la valeur est élevée, plus les dégâts physiques infligés par le pokémon seront augmentés.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/strength.png') }}"> 
                            <span class="profileCharacterCardStatName">Force</span>
                        </div>
                        <div id='strengthValue' class="profileCharacterCardStatValue">{{ character.Stats.strength }}</div>
                        <div class="spendPointButton" onClick="spendPoints('strength')" title="Dépenser 1 Point de Stat pour gagner 1 Force."></div>
                    </div>
                    <div class="profileCharacterCardStat Stat-Power" title="Le Pouvoir représente la capacité de votre pokémon à effectuer des attaques spéciales puissante, plus la valeur est élevée, plus les dégâts spéciaux infligés par le pokémon seront augmentés.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/power.png') }}"> 
                            <span class="profileCharacterCardStatName">Pouvoir</span>
                        </div>
                        <div id='powerValue' class="profileCharacterCardStatValue">{{ character.Stats.power }}</div>
                        <div class="spendPointButton" onClick="spendPoints('power')" title="Dépenser 1 Point de Stat pour gagner 1 Pouvoir."></div>
                    </div>
                    <div class="profileCharacterCardStat Stat-Presence" title="La Présence représente la capacité de votre Pokémon à infliger des status (positifs ou négatifs) & octroyer des soins. Plus la Présence d'un pokémon est elevée, plus ses soins et ses status seront efficaces.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/presence.png') }}"> 
                            <span class="profileCharacterCardStatName">Présence</span>
                        </div>
                        <div id='presenceValue' class="profileCharacterCardStatValue">{{ character.Stats.presence }}</div>
                        <div class="spendPointButton" onClick="spendPoints('presence')" title="Dépenser 1 Point de Stat pour gagner 1 Présence."></div>
                    </div>
                    <div class="profileCharacterCardStat Stat-Coordination" title="La Coordination permet de déterminer la fréquence à laquelle un Pokémon infligera des coups critiques, plus la valeur est élevée, plus les chances de rendre ses attaques critiques sont augmentés. De plus, la Coordination permet de réduire les chances d'esquive lors d'une attaque sur un pokémon adverse.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/coordination.png') }}"> 
                            <span class="profileCharacterCardStatName">Coordination</span>
                        </div>
                        <div id='coordinationValue' class="profileCharacterCardStatValue">{{ character.Stats.coordination }}</div>
                        <div class="spendPointButton" onClick="spendPoints('coordination')" title="Dépenser 1 Point de Stat pour gagner 1 Coordination."></div>
                    </div>
                    <div class="profileCharacterCardStat Stat-Speed" title="La Vitesse permet d'attaquer plus rapidement et plus souvent durant un combat.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/speed.png') }}"> 
                            <span class="profileCharacterCardStatName">Vitesse</span>
                        </div>
                        <div id='speedValue' class="profileCharacterCardStatValue">{{ character.Stats.speed }}</div>
                        <div class="spendPointButton" onClick="spendPoints('speed')" title="Dépenser 1 Point de Stat pour gagner 1 Vitesse."></div>
                    </div>
                </div>
                <div class="profileCharacterCardStats3rdRow">
                    <div class="profileCharacterCardStat Stat-ActionPoint" title="Nombre de points d'action maximum par Rotation">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/actionPoint.png') }}"> 
                            <span class="profileCharacterCardStatName">Points d'Action</span>
                        </div>
                        <div class="profileCharacterCardStatValue">{{ character.Stats.actionPoint }}</div>
                    </div>
                    <div class="profileCharacterCardStat Stat-StatPoints" title="Points à dépenser pour augmenter les statistiques de votre personnage. Obtenu en montant de niveau.">
                        <div class="profileCharacterCardStatInfo">
                            <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/statPoints.png') }}"> 
                            <span class="profileCharacterCardStatName">Points de Stat</span>
                        </div>
                        <div id='statPointValue' class="profileCharacterCardStatValue">{{ character.statPoints }}</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="profileCharacterCardSeparator"></div>
        <div class="profileCharacterCardBottom">
            <div class="profileCharacterCardBottomTitle">Rotations :</div>

            <div id="mobileSwapShowButton" class="mobileSwapShow" onClick="mobileSwapRotationShow()">Voir Rotation</div>

            <table class="profileCharacterCardBottomTable">
                <thead class="profileCharacterCardBottomTableThead">
                    <tr>
                        <th colspan="1">N°</th>
                        <th class="rotationTh openerItem" colspan="2"><a class="modifyRotationLink" href="{{ path('app_character_modify_rotation',{'type':'Opener'}) }}"></a> Opener <span class="rotationCostResume">({{ character.getOpenerRotation().getActionPointUsed() }} / {{ character.getStats().getActionPoint() }} <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/actionPoint.png') }}">)</span></th>
                        <th class="rotationTh rotationItem" colspan="2"><a class="modifyRotationLink" href="{{ path('app_character_modify_rotation',{'type':'Rotation'}) }}"></a> Rotation <span class="rotationCostResume">({{ character.getRotation().getActionPointUsed() }} / {{ character.getStats().getActionPoint() }} <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/actionPoint.png') }}">)</span></th>
                    </tr>
                </thead>
                <tbody>
                    {% set i = 1 %}
                    {% for attackNumber in ['One', 'Two', 'Three', 'Four', 'Five'] %}
                        <tr class="valueTr">
                            <td rowspan="2">{{ i }}</td>
                            <td class="openerItem">{{ character.getOpenerRotation().getAttack(attackNumber).getActionPointCost() }} <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/actionPoint.png') }}"></td>
                            <td class="openerItem">{{ character.getOpenerRotation().getAttack(attackNumber).getName() }} <img title="{{ character.getOpenerRotation().getAttack(attackNumber).getType().getName() }}" class="profileCharacterCardTypeIcon" src="{{ asset(character.getOpenerRotation().getAttack(attackNumber).getType() | typeIcon) }}"></td>
                            <td class="rotationItem">{{ character.getRotation().getAttack(attackNumber).getActionPointCost() }} <img class="profileCharacterCardStatIcon" src="{{ asset('icons/stats/actionPoint.png') }}"></td>
                            <td class="rotationItem">{{ character.getRotation().getAttack(attackNumber).getName() }} <img title="{{ character.getOpenerRotation().getAttack(attackNumber).getType().getName() }}" class="profileCharacterCardTypeIcon" src="{{ asset(character.getRotation().getAttack(attackNumber).getType() | typeIcon) }}"></td>
                        </tr>
                        <tr class="descriptionTr">
                            <td colspan="2" class="openerItem">{{ character.getOpenerRotation().getAttack(attackNumber).getDescription() }}</td>
                            <td colspan="2" class="rotationItem">{{ character.getRotation().getAttack(attackNumber).getDescription() }}</td>
                        </tr>
                        {% set i = i + 1 %}
                    {% endfor %}
                </tbody>
            </table>

        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        var spendPointButtons = document.getElementsByClassName('spendPointButton');
        spendPointButtons = Array.prototype.slice.call(spendPointButtons);

        var showButton = {% if character.statPoints == 0 %} false {% else %} true {% endif %};

        if(showButton === false){
            spendPointButtons.forEach((spendPointButton) => {
                spendPointButton.classList.add("spendPointButtonHide");
            });
        }

        function spendPoints(stat){
            fetch(`{{ path('app_character_spend_point') }}`, {
                method: 'POST',
                body: JSON.stringify({
                    "data": {
                        'statToIncrease' : stat
                    }
                }), // string or object
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            }).then((result) => {
                result = result.json().then((result) => {
                    valueDiv = document.getElementById(stat+'Value')
                    statPointValueDiv = document.getElementById('statPointValue');
                    valueDiv.innerText = result.newStatValue;
                    statPointValueDiv.innerText = result.newStatPointsValue;

                    if(result.newStatPointsValue === 0){
                        spendPointButtons.forEach((spendPointButton) => {
                            spendPointButton.classList.add("spendPointButtonHide");
                        });
                    }
                });
            });
        }

        let mobileRotationShowStates = ['Opener','Rotation']
        let currentMobileRotationShow = 0;
        
        var mobileSwapShowButton = document.getElementById('mobileSwapShowButton');

        var rotationItems = document.getElementsByClassName('rotationItem');
        rotationItems = Array.prototype.slice.call(rotationItems);

        var openerItems = document.getElementsByClassName('openerItem');
        openerItems = Array.prototype.slice.call(openerItems);

        openerItems.forEach((item) => {
            item.classList.add('showItem');
        })

        function mobileSwapRotationShow(){
            mobileSwapShowButton.innerText = `Voir ${mobileRotationShowStates[currentMobileRotationShow]}`;
            if(currentMobileRotationShow === 0){
                currentMobileRotationShow = 1;
            }
            else {
                currentMobileRotationShow = 0;
            }

            if(mobileRotationShowStates[currentMobileRotationShow] === 'Opener'){
                rotationItems.forEach((item) => {
                    item.classList.remove('showItem')
                });

                openerItems.forEach((item) => {
                    item.classList.add('showItem');
                })
            }
            else if(mobileRotationShowStates[currentMobileRotationShow] === 'Rotation') {
                openerItems.forEach((item) => {
                    item.classList.remove('showItem');
                })

                rotationItems.forEach((item) => {
                    item.classList.add('showItem')
                });
            }
        }

        function modifyDescriptionToggle(){
            var modifyDescriptionToggleButton = document.getElementById('modifyDescriptionFormToggle');
            var modifyDescriptionTextArea = document.querySelectorAll("[data-id='modifyDescriptionTextArea']")[0];
            var modifyDescriptionValidationButtons = document.getElementById('modifyDescriptionValidationButtons');
            modifyDescriptionToggleButton.classList.add('modifyDescriptionFormToggleHide');
            modifyDescriptionTextArea.disabled = false;
            modifyDescriptionValidationButtons.classList.remove('modifyDescriptionValidationButtonsHide');
        }

        function OnCLickCancel(){
            location.reload();
        }
    </script>
{% endblock %}